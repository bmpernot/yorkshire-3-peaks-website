AWSTemplateFormatVersion: 2010-09-09
Description: >-
  backend

Transform:
  - AWS::Serverless-2016-10-31

Resources:
  ##### User Resources #####

  getAllUsers:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/users.getAllUsers
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A function to grab all users' information
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
      Environment:
        Variables:
          USER_TABLE: !Ref UserTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user/
            Method: GET

  getUserById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/users.getUserById
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: a function to grab the user's information by id
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
      Environment:
        Variables:
          USER_TABLE: !Ref UserTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: GET

  addUser:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/users.addUser
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: a function to add a user to the user table
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
      Environment:
        Variables:
          USER_TABLE: !Ref UserTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user/
            Method: POST

  updateUser:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/users.updateUser
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: a function to update the user's information
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
      Environment:
        Variables:
          USER_TABLE: !Ref UserTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: PUT

  deleteUser:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/users.deleteUser
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: a function to delete the user's information
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
      Environment:
        Variables:
          USER_TABLE: !Ref UserTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: DELETE

  UserTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: USERS
      PrimaryKey:
        Name: id
        Type: Number
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

##### User Resources #####

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
